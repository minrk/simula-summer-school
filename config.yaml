coreNodeSelector: &coreNodeSelector
  hub.jupyter.org/node-purpose: core

jupyterhub:
  proxy:
    # chp:
    # incompatible with autopilot
    #   nodeSelector: *coreNodeSelector
    service:
      type: ClusterIP
  ingress:
    enabled: true
    annotations:
      ingress.kubernetes.io/proxy-body-size: 64m
      kubernetes.io/ingress.class: gce
      networking.gke.io/managed-certificates: hub
      # kubernetes.io/tls-acme: "true"
    hosts:
      - sscp.minrk.net
    # using gce for tls
    # tls:
    #   - hosts:
    #       - sscp.minrk.net
    # secretName: tls-jupyterhub

  singleuser:
    events: true
    cloudMetadata:
      # incompatible with autopilot
      blockWithIptables: false
    storage:
      homeMountPath: /home/user
    image:
      name: europe-west1-docker.pkg.dev/sscp-2025/sss/simula-summer-school
      tag: "2025"
      pullPolicy: Always
    memory:
      limit: 2G
      guarantee: 1G
    cpu:
      limit: 1
      guarantee: 0.5
    uid: 1001 # match
    extraEnv:
      CULL_CONNECTED: "1"
      CULL_TIMEOUT: "1800"
      CULL_KERNEL_TIMEOUT: "1800"
      CULL_INTERVAL: "120"
      # dijitso defaults to in-env without checking for write permissions
      DIJITSO_CACHE_DIR: "/tmp/dijitso-cache"

  prePuller:
    hook:
      enabled: false
    continuous:
      enabled: true

  hub:
    # incompatible with autopilot
    # nodeSelector: *coreNodeSelector
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: /hub/metrics
    config:
      JupyterHub:
        authenticate_prometheus: false
      OAuthenticator:
        allow_all: true
      Spawner:
        http_timeout: 60

  scheduling:
    podPriority:
      enabled: true
    userPlaceholder:
      enabled: true
      replicas: 0
    # userScheduler, affinity incompatible with autopilot
    userScheduler:
      enabled: false
    # userPods:
    #   nodeAffinity:
    #     # TODO: 'require' when we deploy for real
    #     # 'prefer' for lower costs
    #     # matchNodePurpose: require
    #     matchNodePurpose: prefer
    # corePods:
    #   nodeAffinity:
    #     matchNodePurpose: require

grafana:
  # incompatible with autopilot
  # nodeSelector: *coreNodeSelector
  grafana.ini:
    auth.anonymous:
      enabled: true
      org_name: Main Org.
      org_role: Viewer
    auth.basic:
      enabled: true
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: gce
      networking.gke.io/managed-certificates: hub
      kubernetes.io/tls-acme: "true"
    hosts:
      - grafana.sscp.minrk.net
    # cert autopilot
    # tls:
    #   - hosts:
    #       - grafana.sscp.minrk.net
    # secretName: tls-grafana
  persistence:
    size: 2Gi
    enabled: true
    accessModes:
      - ReadWriteOnce
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: prometheus
          orgId: 1
          type: prometheus
          url: https://prometheus.sscp.minrk.net
          isDefault: true
          editable: false

prometheus:
  # nodeSelector: *coreNodeSelector
  # disable a bunch of things for autopilot
  prometheus-node-exporter:
    enabled: false
  #     updateStrategy:
  #       type: RollingUpdate
  alertmanager:
    enabled: false
  pushgateway:
    enabled: false
  rbac:
    create: true
  server:
    # nodeSelector: *coreNodeSelector
    podLabels:
      hub.jupyter.org/network-access-hub: "true"
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: gce
        networking.gke.io/managed-certificates: hub
        # kubernetes.io/tls-acme: "true"
      hosts:
        - prometheus.sscp.minrk.net
      # tls:
      #   - hosts:
      #       - prometheus.sscp.minrk.net
      # secretName: tls-prometheus
  kube-state-metrics:
    metricLabelsAllowlist:
      - pods=[app,component]
      - nodes=[*]

ingress-nginx:
  rbac:
    create: true
  statsExporter:
    service:
      annotations:
        prometheus.io/scrape: "true"
  controller:
    # nodeSelector: *coreNodeSelector
    replicaCount: 2
    scope:
      enabled: true
    config:
      # Allow POSTs of up to 64MB, for large notebook support.
      proxy-body-size: 64m
    stats:
      enabled: true
    service:
      # Preserve client IPs
      externalTrafficPolicy: Local
